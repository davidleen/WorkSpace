apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
}


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id DEVELOPER_ID
            name DEVELOPER_NAME
            email DEVELOPER_EMAIL
        }
    }
    scm {
        connection project.PROJ_VCSURL
        developerConnection project.PROJ_VCSURL
        url project.PROJ_WEBSITEURL
    }
}


publishing {
    publications {
        MyPublication(MavenPublication) {
            from project.components.java
            artifact sourcesJar
            artifact javadocJar
            groupId  PROJ_GROUP
            artifactId project.getName() //com.example.projectName
            version project.getVersion()
            pom.withXml {
                def root = asNode()
                root.appendNode('description',project.getDescription())
                root.appendNode('name', project.getName())
                root.appendNode('url', project.PROJ_WEBSITEURL)
                root.children().last() + pomConfig
            }
        }
    }
}



bintray {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    user = properties.getProperty('bintrayUser')!=null ?properties.getProperty('bintrayUser'): System.getenv('BINTRAY_USER')
    key = properties.getProperty('bintrayApiKey')!=null ?properties.getProperty('bintrayApiKey'): System.getenv('BINTRAY_API_KEY')
    println  "project============${project}"
    println  "version============${project.getVersion()}"
    println  "PROJ_WEBSITEURL============${project.PROJ_WEBSITEURL}"
//    println  "bintrayUser============${user}"
//    println  "bintrayApiKey============${key}"
    publications = ['MyPublication']//关联到上文maven publication的名字
    publish = true//如果false，还需要到网页上手动发布
     dryRun=false
    pkg {
        userOrg = "davidleen29"  //这个是你创建时的organization,必须要有，不然没办法找到指定路径
        repo = 'Maven'   //这个仓库必须在 userOrg 这个organization下，必须在网页上创建成功，否则还是无法找到 repo
        name = project.getName()
        licenses = ['Apache-2.0']
        vcsUrl = project.PROJ_VCSURL
        labels = ['java', 'spring', 'example']
        version {
            name = project.getVersion()
            desc = project.getDescription()
            released = new Date()
            vcsTag = project.getVersion()+"-FINAL"
//            mavenCentralSync {
//                sync = true//是否同步到中央仓库
//                user = OSSRH_USER//见下文
//                password = OSSRH_PASSWORD//见下文
//            }
        }
    }
}